{"version":3,"file":"static/js/572.305f00a6.chunk.js","mappings":"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","sources":["components/hooks/useFetch.jsx","components/list/CustomerList.jsx","pages/customers/CustomerPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useFetch(url, load) {\n   const [data, setData] = useState(null);\n   const [loading, setLoading] = useState(true);\n   const [error, setError] = useState(null);\n   useEffect(() => {\n      fetch(url)\n         .then((res) => {\n            if (res.status >= 400) {\n               throw new Error(\"Server responds with error!\");\n            }\n            return res.json();\n         })\n         .then(\n            (data) => {\n               setData(data);\n               setLoading(false);\n            },\n            (error) => {\n               setLoading(false);\n               setError(error);\n            }\n         );\n   }, [load]);\n   return { data, loading, error };\n}\n","import useFetch from \"../hooks/useFetch\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { BsPencil } from \"react-icons/bs\";\nimport \"./list.scss\";\nimport { useState, useRef, useEffect, memo } from \"react\";\nimport Modal from \"../modal/Modal\";\nimport Alert from \"@mui/material/Alert\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nfunction AddCustomer(props) {\n   const [customer, setCustomer] = useState({\n      name: \"\",\n      sex: \"Male\",\n      card: \"\",\n      phone: \"\",\n      address: \"\",\n      birthday: \"\",\n   });\n\n   useEffect(() => {\n      props.nameRef.current.focus();\n   }, []);\n\n   const updateCustomer = (e) => {\n      setCustomer((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      fetch(\"http://localhost:8000/customers\", {\n         method: \"post\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify(customer),\n      });\n      props.setOpen((prev) => ({ ...prev, add: false }));\n      props.onLoad();\n   };\n\n   return (\n      <>\n         <Modal\n            title=\"Thêm khách hàng\"\n            setOpen={props.setOpen}\n            body={\n               <form className=\"form\">\n                  <label className=\"input\">\n                     Họ và tên:\n                     <input\n                        type=\"text\"\n                        ref={props.nameRef}\n                        name=\"name\"\n                        value={customer.name}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <div className=\"input radio\">\n                     <p>Giới tính</p>\n                     <div>\n                        <label>\n                           Nam\n                           <input\n                              type=\"radio\"\n                              name=\"sex\"\n                              value=\"Male\"\n                              onChange={updateCustomer}\n                              defaultChecked\n                           />\n                        </label>\n                        <label>\n                           Nữ\n                           <input\n                              type=\"radio\"\n                              name=\"sex\"\n                              value=\"Female\"\n                              onChange={updateCustomer}\n                           />\n                        </label>\n                     </div>\n                  </div>\n                  <label className=\"input\">\n                     CMND/CCCD:\n                     <input\n                        type=\"text\"\n                        name=\"card\"\n                        value={customer.card}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Số điện thoại:\n                     <input\n                        type=\"text\"\n                        name=\"phone\"\n                        value={customer.phone}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Địa chỉ:\n                     <input\n                        type=\"text\"\n                        name=\"address\"\n                        value={customer.address}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Ngày sinh:\n                     <input\n                        type=\"text\"\n                        name=\"birthday\"\n                        value={customer.birthday}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n               </form>\n            }\n            footer={\n               <>\n                  <button onClick={handleSubmit} className=\"btn btn-submit\">\n                     Thực hiện\n                  </button>\n               </>\n            }\n         />\n      </>\n   );\n}\n\nfunction EditCustomer(props) {\n   const [customer, setCustomer] = useState(props.customer);\n\n   useEffect(() => {\n      props.nameRef.current.focus();\n   }, []);\n\n   const updateCustomer = (e) => {\n      setCustomer((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      fetch(`http://localhost:8000/customers/${customer.id}`, {\n         method: \"PATCH\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify(customer),\n      });\n      props.setOpen((prev) => ({ ...prev, edit: false }));\n      props.onLoad();\n   };\n\n   return (\n      <>\n         <Modal\n            title=\"Sửa khách hàng\"\n            setOpen={props.setOpen}\n            body={\n               <form className=\"form\">\n                  <label className=\"input\">\n                     Mã khách hàng:\n                     <input\n                        type=\"text\"\n                        name=\"id\"\n                        value={customer.id}\n                        readOnly\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Họ và tên:\n                     <input\n                        type=\"text\"\n                        ref={props.nameRef}\n                        name=\"name\"\n                        value={customer.name}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <div className=\"input radio\">\n                     <p>Giới tính</p>\n                     <div>\n                        <label>\n                           Nam\n                           <input\n                              type=\"radio\"\n                              name=\"sex\"\n                              value=\"Male\"\n                              onChange={updateCustomer}\n                           />\n                        </label>\n                        <label>\n                           Nữ\n                           <input\n                              type=\"radio\"\n                              name=\"sex\"\n                              value=\"Female\"\n                              onChange={updateCustomer}\n                           />\n                        </label>\n                     </div>\n                  </div>\n                  <label className=\"input\">\n                     CMND/CCCD:\n                     <input\n                        type=\"text\"\n                        name=\"card\"\n                        value={customer.card}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Số điện thoại:\n                     <input\n                        type=\"text\"\n                        name=\"phone\"\n                        value={customer.phone}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Địa chỉ:\n                     <input\n                        type=\"text\"\n                        name=\"address\"\n                        value={customer.address}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n                  <label className=\"input\">\n                     Ngày sinh:\n                     <input\n                        type=\"text\"\n                        name=\"birthday\"\n                        value={customer.birthday}\n                        onChange={updateCustomer}\n                     />\n                  </label>\n               </form>\n            }\n            footer={\n               <>\n                  <button onClick={handleSubmit} className=\"btn btn-submit\">\n                     Thực hiện\n                  </button>\n               </>\n            }\n         />\n      </>\n   );\n}\n\nexport default function CustomerList() {\n   const [load, setLoad] = useState(false);\n   const { data, loading, error } = useFetch(\n      \"http://localhost:8000/customers\",\n      load\n   );\n   const [open, setOpen] = useState({\n      add: false,\n      edit: false,\n      alert: false,\n   });\n\n   const [alert, setAlert] = useState(true);\n   const [cusEdit, setCusEdit] = useState();\n   const nameRef = useRef();\n\n   const render = (array) =>\n      array?.map((res) => (\n         <tr key={res.id}>\n            <td>{res.id}</td>\n            <td>{res.name}</td>\n            <td>{res.sex}</td>\n            <td>{res.card}</td>\n            <td>{res.phone}</td>\n            <td>{res.address}</td>\n            <td>{res.birthday}</td>\n            <td>\n               <BsPencil\n                  className=\"icon icon__edit\"\n                  onClick={() => handleEdit(res.id)}\n               />\n            </td>\n            <td>\n               <BsTrash\n                  className=\"icon icon__delete\"\n                  onClick={() => handleDelete(res.id)}\n               />\n            </td>\n         </tr>\n      ));\n\n   const handleEdit = (id) => {\n      const cusChoose = data?.find((current) =>\n         current.id === id ? current : null\n      );\n      setCusEdit(cusChoose);\n      setOpen((prev) => ({ ...prev, edit: true }));\n   };\n   const handleDelete = (id) => {\n      fetch(`http://localhost:8000/customers/${id}`, {\n         method: \"delete\",\n      });\n      handleReLoad();\n   };\n\n   const handleReLoad = () => {\n      setLoad(!load);\n   };\n\n   const handleClose = () => {\n      setAlert(false);\n   };\n\n   const vertical = \"top\";\n   const horizontal = \"center\";\n\n   if (error) {\n      console.log(error);\n      return (\n         <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={true}\n            autoHideDuration={6000}\n            onClose={() => {}}\n         >\n            <Alert onClose={() => {}} severity=\"error\" sx={{ width: \"100%\" }}>\n               Lỗi load dữ liệu Customer!!!\n            </Alert>\n         </Snackbar>\n      );\n   } else\n      return (\n         <div className=\"list\">\n            <Snackbar\n               open={alert}\n               autoHideDuration={6000}\n               onClose={handleClose}\n            >\n               <Alert\n                  onClose={handleClose}\n                  severity=\"error\"\n                  sx={{ width: \"100%\" }}\n               >\n                  Lỗi load dữ liệu!!!\n               </Alert>\n            </Snackbar>\n            <div className=\"list__header\">\n               <h3 className=\"title list__title\">Thông tin khách hàng</h3>\n               <button\n                  className=\"btn btn-add\"\n                  onClick={() => setOpen((prev) => ({ ...prev, add: true }))}\n               >\n                  Thêm khách hàng\n               </button>\n               {open.add && (\n                  <AddCustomer\n                     setOpen={setOpen}\n                     nameRef={nameRef}\n                     onLoad={handleReLoad}\n                  />\n               )}\n               {open.edit && (\n                  <EditCustomer\n                     setOpen={setOpen}\n                     nameRef={nameRef}\n                     onLoad={handleReLoad}\n                     customer={cusEdit}\n                  />\n               )}\n            </div>\n            <table className=\"customer-list\">\n               <thead>\n                  <tr>\n                     <th>Id</th>\n                     <th>Full Name</th>\n                     <th>Sex</th>\n                     <th>Id card</th>\n                     <th>Phone number</th>\n                     <th>Address</th>\n                     <th>Birthday</th>\n                     <th>Edit</th>\n                     <th>Delete</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {loading && (\n                     <tr>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>Loading ... </td>\n                        <td>\n                           <BsPencil className=\"icon icon__edit\" />\n                        </td>\n                        <td>\n                           <BsTrash className=\"icon icon__delete\" />\n                        </td>\n                     </tr>\n                  )}\n                  {render(data)}\n               </tbody>\n            </table>\n         </div>\n      );\n}\n","import \"./customer-page.scss\";\nimport Container from \"../../components/container/Container\";\nimport CustomerList from \"../../components/list/CustomerList\";\n\nexport default function CustomerPage() {\n   return (\n      <div className=\"page\">\n         <Container\n            title=\"Danh sách khách hàng\"\n            body={\n               <>\n                  <CustomerList />\n               </>\n            }\n         />\n      </div>\n   );\n}\n"],"names":["useFetch","url","load","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","res","status","Error","json","AddCustomer","props","name","sex","card","phone","address","birthday","customer","setCustomer","nameRef","current","focus","updateCustomer","e","prev","target","value","Modal","title","setOpen","body","className","type","ref","onChange","defaultChecked","footer","onClick","preventDefault","method","headers","JSON","stringify","add","onLoad","EditCustomer","id","readOnly","edit","CustomerList","array","setLoad","alert","open","setAlert","cusEdit","setCusEdit","useRef","handleEdit","cusChoose","find","handleDelete","handleReLoad","handleClose","console","log","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","width","map","CustomerPage","Container"],"sourceRoot":""}